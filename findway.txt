map a
boolean t := false
reset [t a 0 0]
int k := step
int m := 1
int l :=0
int h :=0
boolean d := false
while gt m -1 do
    (emp[d a 0 0]
    back
    k:=step
    if gt k false
    if gt d false
    (back
    left
    l := look
    h:=l
    if gt l 1
    (while gt l 1 do
    (k:=step
    if lt k false
        m:=-1
    else
    reset[t a 0 0])
    back
    while gt h 1 do
    step
    left)
    else (right
    step)
    )
    else
    else back
    reset [t a 0 0]
    right
    k:=step
    if lt k false
        m:=-1
    else

    if lt k true
        (left
        k:=step
        if lt k false
             m:=-1
        else

        if lt k true
            (left
            k:=step
            if lt k false
                 m:=-1
            else

            if lt k true
                (left
                k:=step
                if lt k false
                    m:=-1
                else

                )
            else
            )
        else
        )
    else
    )
