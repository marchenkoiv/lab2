
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightINCDECrightELSELPARENleftRPARENBACK BAR BOOLEAN CBOOLEAN CINT CLR DEC DO ELSE EMP EQUALS FALSE GT IF INC INCORRECT INT LBR LEFT LOOK LPAREN LT MAP NAME NEWLINE NOT NUMBER OR PROC RBR RESET RIGHT RPAREN SET STEP TRUE WHILEprogram : statementsstatements_group : LPAREN statements inner_statement RPAREN\n                            | inner_statementinner_statement : declaration\n                     | assignment\n                     | while\n                     | if\n                     | command\n                     | procedure\n                     | call\n                     | empty\n                     | cell_proc\n                     | arithmetic_expressionstatements : statements statement\n                      | statementstatement : declaration NEWLINE\n                     | assignment NEWLINE\n                     | while NEWLINE\n                     | if NEWLINE\n                     | command NEWLINE\n                     | procedure NEWLINE\n                     | call NEWLINE\n                     | empty NEWLINE\n                     | cell_proc NEWLINE\n                     | arithmetic_expression NEWLINEdeclaration : type name EQUALS expression\n                       | MAP namedeclaration : type errortype : INT\n                | CINT\n                | BOOLEAN\n                | CBOOLEAN assignment : name EQUALS expression assignment : name EQUALS errorname : NAMEnumber : NUMBERexpression : name\n                      | const\n                      | number\n                      | logic_expression\n                      | arithmetic_expression\n                      | commandconst : TRUE\n                 | FALSE\n                        logic_expression : LT expression expression\n                           | GT expression expression\n                           | NOT expression\n                           | NOT call\n                           | OR or_arg or_argarithmetic_expression : INC first_ar second_ar\n                                  | DEC first_ar second_arfirst_ar : name\n                  | arithmetic_expression\n                  | callsecond_ar : name\n                  | arithmetic_expression\n                  | call\n                  | number\n                  | logic_expression\n                  | constor_arg : call\n                  | logic_expression\n                  | TRUE\n                  | FALSEwhile : WHILE logic_expression DO NEWLINE statements_groupwhile : DO error\n                  | WHILE errorif :  IF logic_expression NEWLINE statements_group NEWLINE ELSE statements_groupif : IF errorprocedure : PROC NAME LBR parameters RBR NEWLINE statements_group procedure : PROC errorcommand :  command errorcommand : LEFT\n                    | RIGHT\n                    | BACK\n                    | STEP\n                    | LOOKcall : NAME LBR parameters RBR cell_proc : BAR LBR cell_arg RBR\n                     | EMP LBR cell_arg RBR\n                     | SET LBR cell_arg RBR\n                     | RESET LBR cell_arg RBR\n                     | CLR LBR cell_arg RBRcell_arg : name name number numbercell_proc :  BAR error\n                     | EMP error\n                     | SET error\n                     | RESET error\n                     | CLR errorcall : NAME error empty : parameters : parameters name\n                      | name'
    
_lr_action_items = {'MAP':([0,2,3,38,39,40,41,42,43,45,46,47,48,49,107,126,131,154,157,169,],[16,16,-15,-14,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,16,16,16,16,16,16,]),'WHILE':([0,2,3,38,39,40,41,42,43,45,46,47,48,49,107,126,131,154,157,169,],[17,17,-15,-14,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,17,17,17,17,17,17,]),'DO':([0,2,3,20,21,22,23,24,26,38,39,40,41,42,43,44,45,46,47,48,49,52,55,67,82,85,88,89,90,91,92,93,94,95,99,100,102,103,104,105,107,117,118,119,120,121,122,123,124,126,127,128,129,131,144,154,157,169,],[18,18,-15,-73,-74,-75,-76,-77,-35,-14,-16,-17,-18,-19,-20,-72,-21,-22,-23,-24,-25,-35,96,-90,-35,-37,-38,-39,-40,-41,-42,-43,-44,-36,-47,-48,-61,-62,-63,-64,18,-50,-55,-56,-57,-58,-59,-60,-51,18,-45,-46,-49,18,-78,18,18,18,]),'IF':([0,2,3,38,39,40,41,42,43,45,46,47,48,49,107,126,131,154,157,169,],[19,19,-15,-14,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,19,19,19,19,19,19,]),'LEFT':([0,2,3,20,21,22,23,24,26,38,39,40,41,42,43,44,45,46,47,48,49,52,53,57,58,59,67,82,84,85,88,89,90,91,92,93,94,95,97,98,99,100,102,103,104,105,107,117,118,119,120,121,122,123,124,126,127,128,129,131,144,154,157,169,],[20,20,-15,-73,-74,-75,-76,-77,-35,-14,-16,-17,-18,-19,-20,-72,-21,-22,-23,-24,-25,-35,20,20,20,20,-90,-35,20,-37,-38,-39,-40,-41,-42,-43,-44,-36,20,20,-47,-48,-61,-62,-63,-64,20,-50,-55,-56,-57,-58,-59,-60,-51,20,-45,-46,-49,20,-78,20,20,20,]),'RIGHT':([0,2,3,20,21,22,23,24,26,38,39,40,41,42,43,44,45,46,47,48,49,52,53,57,58,59,67,82,84,85,88,89,90,91,92,93,94,95,97,98,99,100,102,103,104,105,107,117,118,119,120,121,122,123,124,126,127,128,129,131,144,154,157,169,],[21,21,-15,-73,-74,-75,-76,-77,-35,-14,-16,-17,-18,-19,-20,-72,-21,-22,-23,-24,-25,-35,21,21,21,21,-90,-35,21,-37,-38,-39,-40,-41,-42,-43,-44,-36,21,21,-47,-48,-61,-62,-63,-64,21,-50,-55,-56,-57,-58,-59,-60,-51,21,-45,-46,-49,21,-78,21,21,21,]),'BACK':([0,2,3,20,21,22,23,24,26,38,39,40,41,42,43,44,45,46,47,48,49,52,53,57,58,59,67,82,84,85,88,89,90,91,92,93,94,95,97,98,99,100,102,103,104,105,107,117,118,119,120,121,122,123,124,126,127,128,129,131,144,154,157,169,],[22,22,-15,-73,-74,-75,-76,-77,-35,-14,-16,-17,-18,-19,-20,-72,-21,-22,-23,-24,-25,-35,22,22,22,22,-90,-35,22,-37,-38,-39,-40,-41,-42,-43,-44,-36,22,22,-47,-48,-61,-62,-63,-64,22,-50,-55,-56,-57,-58,-59,-60,-51,22,-45,-46,-49,22,-78,22,22,22,]),'STEP':([0,2,3,20,21,22,23,24,26,38,39,40,41,42,43,44,45,46,47,48,49,52,53,57,58,59,67,82,84,85,88,89,90,91,92,93,94,95,97,98,99,100,102,103,104,105,107,117,118,119,120,121,122,123,124,126,127,128,129,131,144,154,157,169,],[23,23,-15,-73,-74,-75,-76,-77,-35,-14,-16,-17,-18,-19,-20,-72,-21,-22,-23,-24,-25,-35,23,23,23,23,-90,-35,23,-37,-38,-39,-40,-41,-42,-43,-44,-36,23,23,-47,-48,-61,-62,-63,-64,23,-50,-55,-56,-57,-58,-59,-60,-51,23,-45,-46,-49,23,-78,23,23,23,]),'LOOK':([0,2,3,20,21,22,23,24,26,38,39,40,41,42,43,44,45,46,47,48,49,52,53,57,58,59,67,82,84,85,88,89,90,91,92,93,94,95,97,98,99,100,102,103,104,105,107,117,118,119,120,121,122,123,124,126,127,128,129,131,144,154,157,169,],[24,24,-15,-73,-74,-75,-76,-77,-35,-14,-16,-17,-18,-19,-20,-72,-21,-22,-23,-24,-25,-35,24,24,24,24,-90,-35,24,-37,-38,-39,-40,-41,-42,-43,-44,-36,24,24,-47,-48,-61,-62,-63,-64,24,-50,-55,-56,-57,-58,-59,-60,-51,24,-45,-46,-49,24,-78,24,24,24,]),'PROC':([0,2,3,38,39,40,41,42,43,45,46,47,48,49,107,126,131,154,157,169,],[25,25,-15,-14,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,25,25,25,25,25,25,]),'NAME':([0,2,3,14,16,20,21,22,23,24,25,26,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,52,53,57,58,59,60,66,67,68,70,72,74,76,78,79,80,81,82,83,84,85,88,89,90,91,92,93,94,95,97,98,99,100,101,102,103,104,105,107,108,109,110,112,117,118,119,120,121,122,123,124,126,127,128,129,131,143,144,145,154,157,169,],[26,26,-15,52,52,-73,-74,-75,-76,-77,64,-35,82,82,-29,-30,-31,-32,-14,-16,-17,-18,-19,-20,-72,-21,-22,-23,-24,-25,-35,52,52,52,26,106,52,-90,52,52,52,52,52,82,-52,-53,-54,-35,82,52,-37,-38,-39,-40,-41,-42,-43,-44,-36,52,52,-47,-48,106,-61,-62,-63,-64,26,52,52,-93,52,-50,-55,-56,-57,-58,-59,-60,-51,26,-45,-46,-49,26,52,-78,-92,26,26,26,]),'NEWLINE':([0,2,3,4,5,6,7,8,9,10,11,12,13,20,21,22,23,24,26,38,39,40,41,42,43,44,45,46,47,48,49,51,52,54,56,61,62,63,65,67,69,71,73,75,77,82,85,86,87,88,89,90,91,92,93,94,95,96,99,100,102,103,104,105,107,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,144,146,148,149,150,151,152,154,155,157,159,160,161,162,163,164,165,166,167,168,169,171,172,173,],[-91,-91,-15,39,40,41,42,43,45,46,47,48,49,-73,-74,-75,-76,-77,-35,-14,-16,-17,-18,-19,-20,-72,-21,-22,-23,-24,-25,-28,-35,-27,-67,-66,107,-69,-71,-90,-85,-86,-87,-88,-89,-35,-37,-33,-34,-38,-39,-40,-41,-42,-43,-44,-36,126,-47,-48,-61,-62,-63,-64,-91,-50,-55,-56,-57,-58,-59,-60,-51,-26,-91,-45,-46,-49,153,-91,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-78,-79,-80,-81,-82,-83,-65,-91,169,-91,39,40,41,42,43,45,46,47,48,49,-91,-68,-2,-70,]),'BAR':([0,2,3,38,39,40,41,42,43,45,46,47,48,49,107,126,131,154,157,169,],[27,27,-15,-14,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,27,27,27,27,27,27,]),'EMP':([0,2,3,38,39,40,41,42,43,45,46,47,48,49,107,126,131,154,157,169,],[28,28,-15,-14,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,28,28,28,28,28,28,]),'SET':([0,2,3,38,39,40,41,42,43,45,46,47,48,49,107,126,131,154,157,169,],[29,29,-15,-14,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,29,29,29,29,29,29,]),'RESET':([0,2,3,38,39,40,41,42,43,45,46,47,48,49,107,126,131,154,157,169,],[30,30,-15,-14,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,30,30,30,30,30,30,]),'CLR':([0,2,3,38,39,40,41,42,43,45,46,47,48,49,107,126,131,154,157,169,],[31,31,-15,-14,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,31,31,31,31,31,31,]),'INC':([0,2,3,20,21,22,23,24,26,32,33,38,39,40,41,42,43,44,45,46,47,48,49,52,53,57,58,59,67,78,79,80,81,82,83,84,85,88,89,90,91,92,93,94,95,97,98,99,100,102,103,104,105,107,117,118,119,120,121,122,123,124,126,127,128,129,131,144,154,157,169,],[32,32,-15,-73,-74,-75,-76,-77,-35,32,32,-14,-16,-17,-18,-19,-20,-72,-21,-22,-23,-24,-25,-35,32,32,32,32,-90,32,-52,-53,-54,-35,32,32,-37,-38,-39,-40,-41,-42,-43,-44,-36,32,32,-47,-48,-61,-62,-63,-64,32,-50,-55,-56,-57,-58,-59,-60,-51,32,-45,-46,-49,32,-78,32,32,32,]),'DEC':([0,2,3,20,21,22,23,24,26,32,33,38,39,40,41,42,43,44,45,46,47,48,49,52,53,57,58,59,67,78,79,80,81,82,83,84,85,88,89,90,91,92,93,94,95,97,98,99,100,102,103,104,105,107,117,118,119,120,121,122,123,124,126,127,128,129,131,144,154,157,169,],[33,33,-15,-73,-74,-75,-76,-77,-35,33,33,-14,-16,-17,-18,-19,-20,-72,-21,-22,-23,-24,-25,-35,33,33,33,33,-90,33,-52,-53,-54,-35,33,33,-37,-38,-39,-40,-41,-42,-43,-44,-36,33,33,-47,-48,-61,-62,-63,-64,33,-50,-55,-56,-57,-58,-59,-60,-51,33,-45,-46,-49,33,-78,33,33,33,]),'INT':([0,2,3,38,39,40,41,42,43,45,46,47,48,49,107,126,131,154,157,169,],[34,34,-15,-14,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,34,34,34,34,34,34,]),'CINT':([0,2,3,38,39,40,41,42,43,45,46,47,48,49,107,126,131,154,157,169,],[35,35,-15,-14,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,35,35,35,35,35,35,]),'BOOLEAN':([0,2,3,38,39,40,41,42,43,45,46,47,48,49,107,126,131,154,157,169,],[36,36,-15,-14,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,36,36,36,36,36,36,]),'CBOOLEAN':([0,2,3,38,39,40,41,42,43,45,46,47,48,49,107,126,131,154,157,169,],[37,37,-15,-14,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,37,37,37,37,37,37,]),'$end':([1,2,3,38,39,40,41,42,43,45,46,47,48,49,],[0,-1,-15,-14,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,]),'RPAREN':([3,20,21,22,23,24,26,38,39,40,41,42,43,44,45,46,47,48,49,51,52,54,56,61,63,65,67,69,71,73,75,77,82,85,86,87,88,89,90,91,92,93,94,95,99,100,102,103,104,105,117,118,119,120,121,122,123,124,125,126,127,128,129,132,133,134,135,136,137,138,139,140,141,142,144,146,148,149,150,151,152,154,157,158,159,160,161,162,163,164,165,166,167,168,169,171,172,173,],[-15,-73,-74,-75,-76,-77,-35,-14,-16,-17,-18,-19,-20,-72,-21,-22,-23,-24,-25,-28,-35,-27,-67,-66,-69,-71,-90,-85,-86,-87,-88,-89,-35,-37,-33,-34,-38,-39,-40,-41,-42,-43,-44,-36,-47,-48,-61,-62,-63,-64,-50,-55,-56,-57,-58,-59,-60,-51,-26,-91,-45,-46,-49,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-78,-79,-80,-81,-82,-83,-65,-91,-91,172,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-91,-68,-2,-70,]),'error':([8,14,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,34,35,36,37,44,53,82,92,106,137,163,],[44,51,56,61,63,-73,-74,-75,-76,-77,65,67,69,71,73,75,77,-29,-30,-31,-32,-72,87,67,44,67,44,44,]),'EQUALS':([15,26,50,52,],[53,-35,84,-35,]),'LT':([17,19,20,21,22,23,24,26,44,52,53,57,58,59,60,67,78,79,80,81,82,83,84,85,88,89,90,91,92,93,94,95,97,98,99,100,101,102,103,104,105,117,118,119,120,121,122,123,124,127,128,129,144,],[57,57,-73,-74,-75,-76,-77,-35,-72,-35,57,57,57,57,57,-90,57,-52,-53,-54,-35,57,57,-37,-38,-39,-40,-41,-42,-43,-44,-36,57,57,-47,-48,57,-61,-62,-63,-64,-50,-55,-56,-57,-58,-59,-60,-51,-45,-46,-49,-78,]),'GT':([17,19,20,21,22,23,24,26,44,52,53,57,58,59,60,67,78,79,80,81,82,83,84,85,88,89,90,91,92,93,94,95,97,98,99,100,101,102,103,104,105,117,118,119,120,121,122,123,124,127,128,129,144,],[58,58,-73,-74,-75,-76,-77,-35,-72,-35,58,58,58,58,58,-90,58,-52,-53,-54,-35,58,58,-37,-38,-39,-40,-41,-42,-43,-44,-36,58,58,-47,-48,58,-61,-62,-63,-64,-50,-55,-56,-57,-58,-59,-60,-51,-45,-46,-49,-78,]),'NOT':([17,19,20,21,22,23,24,26,44,52,53,57,58,59,60,67,78,79,80,81,82,83,84,85,88,89,90,91,92,93,94,95,97,98,99,100,101,102,103,104,105,117,118,119,120,121,122,123,124,127,128,129,144,],[59,59,-73,-74,-75,-76,-77,-35,-72,-35,59,59,59,59,59,-90,59,-52,-53,-54,-35,59,59,-37,-38,-39,-40,-41,-42,-43,-44,-36,59,59,-47,-48,59,-61,-62,-63,-64,-50,-55,-56,-57,-58,-59,-60,-51,-45,-46,-49,-78,]),'OR':([17,19,20,21,22,23,24,26,44,52,53,57,58,59,60,67,78,79,80,81,82,83,84,85,88,89,90,91,92,93,94,95,97,98,99,100,101,102,103,104,105,117,118,119,120,121,122,123,124,127,128,129,144,],[60,60,-73,-74,-75,-76,-77,-35,-72,-35,60,60,60,60,60,-90,60,-52,-53,-54,-35,60,60,-37,-38,-39,-40,-41,-42,-43,-44,-36,60,60,-47,-48,60,-61,-62,-63,-64,-50,-55,-56,-57,-58,-59,-60,-51,-45,-46,-49,-78,]),'TRUE':([20,21,22,23,24,26,44,52,53,57,58,59,60,67,78,79,80,81,82,83,84,85,88,89,90,91,92,93,94,95,97,98,99,100,101,102,103,104,105,117,118,119,120,121,122,123,124,127,128,129,144,],[-73,-74,-75,-76,-77,-35,-72,-35,93,93,93,93,104,-90,93,-52,-53,-54,-35,93,93,-37,-38,-39,-40,-41,-42,-43,-44,-36,93,93,-47,-48,104,-61,-62,-63,-64,-50,-55,-56,-57,-58,-59,-60,-51,-45,-46,-49,-78,]),'FALSE':([20,21,22,23,24,26,44,52,53,57,58,59,60,67,78,79,80,81,82,83,84,85,88,89,90,91,92,93,94,95,97,98,99,100,101,102,103,104,105,117,118,119,120,121,122,123,124,127,128,129,144,],[-73,-74,-75,-76,-77,-35,-72,-35,94,94,94,94,105,-90,94,-52,-53,-54,-35,94,94,-37,-38,-39,-40,-41,-42,-43,-44,-36,94,94,-47,-48,105,-61,-62,-63,-64,-50,-55,-56,-57,-58,-59,-60,-51,-45,-46,-49,-78,]),'NUMBER':([20,21,22,23,24,26,44,52,53,57,58,59,67,78,79,80,81,82,83,84,85,88,89,90,91,92,93,94,95,97,98,99,100,102,103,104,105,117,118,119,120,121,122,123,124,127,128,129,144,147,156,],[-73,-74,-75,-76,-77,-35,-72,-35,95,95,95,95,-90,95,-52,-53,-54,-35,95,95,-37,-38,-39,-40,-41,-42,-43,-44,-36,95,95,-47,-48,-61,-62,-63,-64,-50,-55,-56,-57,-58,-59,-60,-51,-45,-46,-49,-78,95,95,]),'LBR':([26,27,28,29,30,31,64,82,106,],[66,68,70,72,74,76,108,66,66,]),'RBR':([52,95,109,110,111,113,114,115,116,143,145,170,],[-35,-36,144,-93,146,148,149,150,151,155,-92,-84,]),'LPAREN':([107,126,157,169,],[131,131,131,131,]),'ELSE':([153,],[157,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statements':([0,131,],[2,154,]),'statement':([0,2,131,154,],[3,38,3,38,]),'declaration':([0,2,107,126,131,154,157,169,],[4,4,133,133,4,159,133,133,]),'assignment':([0,2,107,126,131,154,157,169,],[5,5,134,134,5,160,134,134,]),'while':([0,2,107,126,131,154,157,169,],[6,6,135,135,6,161,135,135,]),'if':([0,2,107,126,131,154,157,169,],[7,7,136,136,7,162,136,136,]),'command':([0,2,53,57,58,59,84,97,98,107,126,131,154,157,169,],[8,8,92,92,92,92,92,92,92,137,137,8,163,137,137,]),'procedure':([0,2,107,126,131,154,157,169,],[9,9,138,138,9,164,138,138,]),'call':([0,2,32,33,59,60,78,83,101,107,126,131,154,157,169,],[10,10,81,81,100,102,120,120,102,139,139,10,165,139,139,]),'empty':([0,2,107,126,131,154,157,169,],[11,11,140,140,11,166,140,140,]),'cell_proc':([0,2,107,126,131,154,157,169,],[12,12,141,141,12,167,141,141,]),'arithmetic_expression':([0,2,32,33,53,57,58,59,78,83,84,97,98,107,126,131,154,157,169,],[13,13,80,80,91,91,91,91,119,119,91,91,91,142,142,13,168,142,142,]),'type':([0,2,107,126,131,154,157,169,],[14,14,14,14,14,14,14,14,]),'name':([0,2,14,16,32,33,53,57,58,59,66,68,70,72,74,76,78,83,84,97,98,107,108,109,112,126,131,143,154,157,169,],[15,15,50,54,79,79,85,85,85,85,110,112,112,112,112,112,118,118,85,85,85,15,110,145,147,15,15,145,15,15,15,]),'logic_expression':([17,19,53,57,58,59,60,78,83,84,97,98,101,],[55,62,90,90,90,90,103,122,122,90,90,90,103,]),'first_ar':([32,33,],[78,83,]),'expression':([53,57,58,59,84,97,98,],[86,97,98,99,125,127,128,]),'const':([53,57,58,59,78,83,84,97,98,],[88,88,88,88,123,123,88,88,88,]),'number':([53,57,58,59,78,83,84,97,98,147,156,],[89,89,89,89,121,121,89,89,89,156,170,]),'or_arg':([60,101,],[101,129,]),'parameters':([66,108,],[109,143,]),'cell_arg':([68,70,72,74,76,],[111,113,114,115,116,]),'second_ar':([78,83,],[117,124,]),'statements_group':([107,126,157,169,],[130,152,171,173,]),'inner_statement':([107,126,154,157,169,],[132,132,158,132,132,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statements','program',1,'p_program','parser.py',27),
  ('statements_group -> LPAREN statements inner_statement RPAREN','statements_group',4,'p_statements_group','parser.py',32),
  ('statements_group -> inner_statement','statements_group',1,'p_statements_group','parser.py',33),
  ('inner_statement -> declaration','inner_statement',1,'p_inner_statement','parser.py',41),
  ('inner_statement -> assignment','inner_statement',1,'p_inner_statement','parser.py',42),
  ('inner_statement -> while','inner_statement',1,'p_inner_statement','parser.py',43),
  ('inner_statement -> if','inner_statement',1,'p_inner_statement','parser.py',44),
  ('inner_statement -> command','inner_statement',1,'p_inner_statement','parser.py',45),
  ('inner_statement -> procedure','inner_statement',1,'p_inner_statement','parser.py',46),
  ('inner_statement -> call','inner_statement',1,'p_inner_statement','parser.py',47),
  ('inner_statement -> empty','inner_statement',1,'p_inner_statement','parser.py',48),
  ('inner_statement -> cell_proc','inner_statement',1,'p_inner_statement','parser.py',49),
  ('inner_statement -> arithmetic_expression','inner_statement',1,'p_inner_statement','parser.py',50),
  ('statements -> statements statement','statements',2,'p_statements','parser.py',56),
  ('statements -> statement','statements',1,'p_statements','parser.py',57),
  ('statement -> declaration NEWLINE','statement',2,'p_statement','parser.py',65),
  ('statement -> assignment NEWLINE','statement',2,'p_statement','parser.py',66),
  ('statement -> while NEWLINE','statement',2,'p_statement','parser.py',67),
  ('statement -> if NEWLINE','statement',2,'p_statement','parser.py',68),
  ('statement -> command NEWLINE','statement',2,'p_statement','parser.py',69),
  ('statement -> procedure NEWLINE','statement',2,'p_statement','parser.py',70),
  ('statement -> call NEWLINE','statement',2,'p_statement','parser.py',71),
  ('statement -> empty NEWLINE','statement',2,'p_statement','parser.py',72),
  ('statement -> cell_proc NEWLINE','statement',2,'p_statement','parser.py',73),
  ('statement -> arithmetic_expression NEWLINE','statement',2,'p_statement','parser.py',74),
  ('declaration -> type name EQUALS expression','declaration',4,'p_declaration','parser.py',81),
  ('declaration -> MAP name','declaration',2,'p_declaration','parser.py',82),
  ('declaration -> type error','declaration',2,'p_declaration_error','parser.py',90),
  ('type -> INT','type',1,'p_type','parser.py',96),
  ('type -> CINT','type',1,'p_type','parser.py',97),
  ('type -> BOOLEAN','type',1,'p_type','parser.py',98),
  ('type -> CBOOLEAN','type',1,'p_type','parser.py',99),
  ('assignment -> name EQUALS expression','assignment',3,'p_assignment','parser.py',104),
  ('assignment -> name EQUALS error','assignment',3,'p_assignment_err','parser.py',109),
  ('name -> NAME','name',1,'p_name','parser.py',115),
  ('number -> NUMBER','number',1,'p_number','parser.py',120),
  ('expression -> name','expression',1,'p_expression','parser.py',125),
  ('expression -> const','expression',1,'p_expression','parser.py',126),
  ('expression -> number','expression',1,'p_expression','parser.py',127),
  ('expression -> logic_expression','expression',1,'p_expression','parser.py',128),
  ('expression -> arithmetic_expression','expression',1,'p_expression','parser.py',129),
  ('expression -> command','expression',1,'p_expression','parser.py',130),
  ('const -> TRUE','const',1,'p_const','parser.py',135),
  ('const -> FALSE','const',1,'p_const','parser.py',136),
  ('logic_expression -> LT expression expression','logic_expression',3,'p_logic_expression','parser.py',142),
  ('logic_expression -> GT expression expression','logic_expression',3,'p_logic_expression','parser.py',143),
  ('logic_expression -> NOT expression','logic_expression',2,'p_logic_expression','parser.py',144),
  ('logic_expression -> NOT call','logic_expression',2,'p_logic_expression','parser.py',145),
  ('logic_expression -> OR or_arg or_arg','logic_expression',3,'p_logic_expression','parser.py',146),
  ('arithmetic_expression -> INC first_ar second_ar','arithmetic_expression',3,'p_arithmetic_expression','parser.py',154),
  ('arithmetic_expression -> DEC first_ar second_ar','arithmetic_expression',3,'p_arithmetic_expression','parser.py',155),
  ('first_ar -> name','first_ar',1,'p_first_ar','parser.py',160),
  ('first_ar -> arithmetic_expression','first_ar',1,'p_first_ar','parser.py',161),
  ('first_ar -> call','first_ar',1,'p_first_ar','parser.py',162),
  ('second_ar -> name','second_ar',1,'p_second_ar','parser.py',167),
  ('second_ar -> arithmetic_expression','second_ar',1,'p_second_ar','parser.py',168),
  ('second_ar -> call','second_ar',1,'p_second_ar','parser.py',169),
  ('second_ar -> number','second_ar',1,'p_second_ar','parser.py',170),
  ('second_ar -> logic_expression','second_ar',1,'p_second_ar','parser.py',171),
  ('second_ar -> const','second_ar',1,'p_second_ar','parser.py',172),
  ('or_arg -> call','or_arg',1,'p_or_arg','parser.py',177),
  ('or_arg -> logic_expression','or_arg',1,'p_or_arg','parser.py',178),
  ('or_arg -> TRUE','or_arg',1,'p_or_arg','parser.py',179),
  ('or_arg -> FALSE','or_arg',1,'p_or_arg','parser.py',180),
  ('while -> WHILE logic_expression DO NEWLINE statements_group','while',5,'p_while','parser.py',185),
  ('while -> DO error','while',2,'p_while_err','parser.py',190),
  ('while -> WHILE error','while',2,'p_while_err','parser.py',191),
  ('if -> IF logic_expression NEWLINE statements_group NEWLINE ELSE statements_group','if',7,'p_if','parser.py',197),
  ('if -> IF error','if',2,'p_if_err','parser.py',202),
  ('procedure -> PROC NAME LBR parameters RBR NEWLINE statements_group','procedure',7,'p_procedure','parser.py',208),
  ('procedure -> PROC error','procedure',2,'p_procedure_err','parser.py',217),
  ('command -> command error','command',2,'p_command_error','parser.py',223),
  ('command -> LEFT','command',1,'p_command','parser.py',229),
  ('command -> RIGHT','command',1,'p_command','parser.py',230),
  ('command -> BACK','command',1,'p_command','parser.py',231),
  ('command -> STEP','command',1,'p_command','parser.py',232),
  ('command -> LOOK','command',1,'p_command','parser.py',233),
  ('call -> NAME LBR parameters RBR','call',4,'p_call','parser.py',238),
  ('cell_proc -> BAR LBR cell_arg RBR','cell_proc',4,'p_cell_proc','parser.py',246),
  ('cell_proc -> EMP LBR cell_arg RBR','cell_proc',4,'p_cell_proc','parser.py',247),
  ('cell_proc -> SET LBR cell_arg RBR','cell_proc',4,'p_cell_proc','parser.py',248),
  ('cell_proc -> RESET LBR cell_arg RBR','cell_proc',4,'p_cell_proc','parser.py',249),
  ('cell_proc -> CLR LBR cell_arg RBR','cell_proc',4,'p_cell_proc','parser.py',250),
  ('cell_arg -> name name number number','cell_arg',4,'p_cell_arg','parser.py',255),
  ('cell_proc -> BAR error','cell_proc',2,'p_call_err0','parser.py',260),
  ('cell_proc -> EMP error','cell_proc',2,'p_call_err0','parser.py',261),
  ('cell_proc -> SET error','cell_proc',2,'p_call_err0','parser.py',262),
  ('cell_proc -> RESET error','cell_proc',2,'p_call_err0','parser.py',263),
  ('cell_proc -> CLR error','cell_proc',2,'p_call_err0','parser.py',264),
  ('call -> NAME error','call',2,'p_call_err','parser.py',270),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',276),
  ('parameters -> parameters name','parameters',2,'p_parameters','parser.py',281),
  ('parameters -> name','parameters',1,'p_parameters','parser.py',282),
]
